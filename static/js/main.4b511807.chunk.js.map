{"version":3,"sources":["Hours.jsx","Minutes.jsx","Seconds.jsx","StandardCountdown.jsx","WordCountdown.jsx","Countdown.jsx","CountFormatter.jsx","CountSetter.jsx","App.js","serviceWorker.js","index.js"],"names":["Hours","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hours","isNaN","setHours","react_default","a","createElement","Component","Minutes","minutes","setMins","Seconds","seconds","setSecs","StandardCountdown","className","Hours_Hours","setTime","Minutes_Minutes","Seconds_Seconds","onClick","setTimeStates","reset","WordCountdown","Countdown","_this","state","resetStatus","bind","assertThisInitialized","doAllCountDowns","countDown","continueCountdown","count","startButton","document","getElementsByClassName","disabled","setAttribute","setState","start","millisecs","_this2","countingDown","setInterval","clearInterval","type","removeAttribute","display","StandardCountdown_StandardCountdown","countdown","WordCountdown_WordCountdown","CountFormatter","name","value","setDisplay","CountSetter","val","match","alert","clearInvalid","parseInt","getElementById","e","preventDefault","checkEntry","target","defineProperty","allDisplays","getElementsByName","i","length","checked","id","onChange","setCount","CountFormatter_CountFormatter","Countdown_Countdown","App","CountSetter_CountSetter","Boolean","window","location","hostname","addEventListener","root","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.4b511807.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Hours extends Component {\n\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    \n    let hours;\n\n    if(isNaN(this.props.setHours)){\n      hours = 0;\n    } else {\n      hours = this.props.setHours;\n    }\n\n    return (\n      <div>\n        <h3>{hours}</h3>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Minutes extends Component {\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n\n    let minutes;\n\n    if (isNaN(this.props.setMins)) {\n      minutes = 0;\n    } else {\n      minutes = this.props.setMins;\n    }\n\n    return (\n      <div>\n        <h3>{minutes}</h3>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Seconds extends Component {\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    let seconds;\n\n    if (isNaN(this.props.setSecs)) {\n      seconds = 0;\n    } else {\n      seconds = this.props.setSecs;\n    }\n    return (\n      <div>\n        <h3>{seconds}</h3>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Hours from \"./Hours\";\nimport Minutes from \"./Minutes\";\nimport Seconds from \"./Seconds\";\n\nexport default class StandardCountdown extends Component {\n  constructor(props){\n      super(props);\n  }\n\n  render() {\n\n    return (\n      <div className=\"Countdown\">\n        <ul>\n          <li>\n            <Hours setHours={this.props.setTime.hours} />\n          </li>\n          :\n          <li>\n            <Minutes setMins={this.props.setTime.minutes} />\n          </li>\n          :\n          <li>\n            <Seconds setSecs={this.props.setTime.seconds} />\n          </li>\n        </ul>\n\n        <div className=\"ButtonParent\">\n          <button\n            className=\"StartButton\"\n            onClick={this.props.setTimeStates}\n          >\n            Start\n          </button>\n\n          <button\n            className=\"ResetButton\"\n            onClick={this.props.reset}\n          >\n            Reset\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Hours from \"./Hours\";\nimport Minutes from \"./Minutes\";\nimport Seconds from \"./Seconds\";\n\n\nexport default class WordCountdown extends Component {\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"Countdown\">\n        <ul>\n          <li>\n            <Hours setHours={this.props.setTime.hours} /> Hours\n          </li>\n          <li>\n            <Minutes setMins={this.props.setTime.minutes} /> Minutes\n          </li>\n          <li>\n            <Seconds setSecs={this.props.setTime.seconds} /> Seconds\n          </li>\n        </ul>\n\n        <div className=\"ButtonParent\">\n          <button\n            className=\"StartButton\"\n            onClick={this.props.setTimeStates}\n          >\n            Start\n          </button>\n\n          <button\n            className=\"ResetButton\"\n            onClick={this.props.reset}\n          >\n            Reset\n          </button>\n        </div>\n        \n      </div>\n    );\n  }\n}\n","\nimport React, { Component } from \"react\";\nimport Hours from './Hours';\nimport Minutes from './Minutes';\nimport Seconds from './Seconds';\nimport StandardCountdown from './StandardCountdown';\nimport WordCountdown from './WordCountdown';\n\nexport default class Countdown extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      seconds: 0,\n      minutes: 0,\n      hours: 0\n    }\n    \n    this.resetStatus = false;\n\n    this.setTimeStates.bind(this);\n    this.doAllCountDowns.bind(this);\n    this.countDown.bind(this);\n    this.continueCountdown.bind(this);\n  }\n\n  setTimeStates(){\n\n    let startButton = document.getElementsByClassName(\"StartButton\");\n    startButton[0].disabled = true;\n    startButton[0].setAttribute(\"id\", \"ClickedStart\")\n\n    let count;\n    if(this.props.setTime.seconds !== 0){\n      count = this.props.setTime.seconds;\n      this.setState({seconds: count});\n    } \n    \n    if(this.props.setTime.minutes !== 0){\n      count = this.props.setTime.minutes;\n      this.setState({minutes: count});\n    } \n\n    if(this.props.setTime.hours !== 0){\n      count = this.props.setTime.hours;\n      this.setState({hours: count});\n    }\n\n    this.doAllCountDowns();\n  }\n  \n  doAllCountDowns(){\n    let start;\n    let count;\n    if(this.props.setTime.seconds !== 0){\n      start = \"seconds\";\n      count = this.props.setTime.seconds;\n      this.setState({seconds: count});\n    } \n    \n    else if(this.props.setTime.minutes !== 0){\n      start = \"minutes\"\n      count = this.props.setTime.minutes;\n      this.setState({minutes: count});\n    } \n\n    else if(this.props.setTime.hours !== 0){\n      start = \"hours\"\n      count = this.props.setTime.hours;\n      this.setState({hours: count});\n    }\n\n    this.countDown(start, count);\n  }\n\n  countDown(start, count){\n\n    let millisecs;\n    let type;\n\n    switch (start) {\n      case \"hours\":\n        millisecs = 3.6e6;\n        break;\n      case \"minutes\":\n        millisecs = 60000;\n        break;\n      case \"seconds\":\n        millisecs = 1000;\n        break;\n    \n      default:\n        break;\n    }\n      let countingDown = \n      setInterval(() => {\n        if(this.resetStatus){\n          clearInterval(countingDown);\n          this.resetStatus = false;\n        }\n\n        else if(count === 0){\n          clearInterval(countingDown);\n\n          if(this.state.minutes > 0){\n            this.continueCountdown(\"minutes\");\n          } else if(this.state.hours > 0){\n            this.continueCountdown(\"hours\")\n          }\n\n        } else {\n          count--;\n          \n          switch (start) {\n            case \"hours\":\n              this.setState({hours: count});\n              break;\n            case \"minutes\":\n              this.setState({minutes: count});\n              break;\n            case \"seconds\":\n              this.setState({seconds: count});\n              break;            \n            default:\n              break;\n          }\n        }\n      }, millisecs);\n  }\n\n  continueCountdown(type){\n    switch (type) {\n      case \"minutes\":\n        let minutes = this.state.minutes\n        this.setState({seconds: 59});\n        this.setState({minutes: minutes-1});\n        this.countDown(\"seconds\", 59);\n        break;\n      \n      case \"hours\":\n        let hours = this.state.hours\n        this.setState({minutes: 59});\n        this.setState({seconds: 59});\n        this.setState({hours: hours-1});\n        this.countDown(\"seconds\", 59);\n        break;\n    \n      default:\n        break;\n    }\n  }\n\n  reset(){\n    this.setState({\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    })\n    this.resetStatus = true;\n\n    let startButton = document.getElementsByClassName(\"StartButton\");\n      startButton[0].disabled = false;\n      startButton[0].removeAttribute(\"id\", \"ClickedStart\")\n  }\n\n\n  render() {\n    let displayFormat = this.props.setTime.display;\n    let display;\n\n    switch (displayFormat) {\n      case \"standard\":\n        display =\n          <StandardCountdown\n            setTime={this.state}\n            setTimeStates = {this.setTimeStates.bind(this)}\n            countdown={this.countdown}\n            reset = {this.reset.bind(this)}\n            />;\n        break;\n\n      case \"words\":\n        display =\n          <WordCountdown\n            setTime={this.state}\n            setTimeStates = {this.setTimeStates.bind(this)}\n            countdown={this.countdown}\n            reset = {this.reset.bind(this)}\n          />;\n        break;\n\n      default:\n        display =\n          <StandardCountdown\n            setTime={this.state}\n            setTimeStates = {this.setTimeStates.bind(this)}\n            countdown={this.countdown}\n            reset = {this.reset.bind(this)}\n          />;\n        break;\n    }\n\n  return (\n    <div className=\"Countdown\">\n        {display}\n    </div>\n  )}\n}\n","import React, { Component } from 'react'\n\nexport default class CountFormatter extends Component {\n  render() {\n    return (\n      <div className=\"CountFormatterBox\">\n        <h3>Display:</h3>\n        <form className=\"CountFormatterForm\">\n            <li>\n                <label>Standard(H:M:S)</label>\n                <input\n                    type=\"radio\"\n                    name=\"display\"\n                    value=\"standard\"\n                    onClick={this.props.setDisplay}\n                />\n            </li>\n            <li>\n                <label>In Words:</label>\n                <input\n                    type=\"radio\"\n                    name=\"display\"\n                    value=\"words\"\n                    onClick={this.props.setDisplay} \n            />\n            </li>\n        </form>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Countdown from \"./Countdown\";\nimport CountFormatter from \"./CountFormatter\";\n\nexport default class CountSetter extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      display: \"\"\n    };\n    this.setDisplay = this.setDisplay.bind(this)\n  }\n\n  checkEntry(type, val){\n    let onlyNumCheck = /\\D/;\n    if(val.match(onlyNumCheck)){\n      alert(\"Please enter only number inputs.\");\n      this.clearInvalid(type);\n    }\n\n    if(parseInt(val) > 59){\n        alert(\"Please enter numbers under 60.\");\n        this.clearInvalid(type);\n      }\n  }\n\n  clearInvalid(type){\n    if(type === \"hours\"){\n      document.getElementById(\"HourSetter\").value = 0;\n    }\n    if(type === \"minutes\"){\n      document.getElementById(\"MinuteSetter\").value = 0;\n    }\n    if(type === \"seconds\") {\n      document.getElementById(\"SecondSetter\").value = 0;\n    }\n  }\n\n  setCount(type){\n    return (e) => {\n      e.preventDefault();\n      this.checkEntry(type, e.target.value);\n      this.setState({ [type]: parseInt(e.target.value)});\n    }\n  }\n\n  setDisplay(){\n    let allDisplays = document.getElementsByName(\"display\");\n    \n    for(let i = 0; i < allDisplays.length; i++){\n      if(allDisplays[i].checked){\n        this.setState({display: allDisplays[i].value})\n      }\n    }\n  }\n\n\n  render(){\n    return (\n      <div>\n        <h2>Clock Countdown</h2>\n        <div className=\"CountSetter\">\n          <form className=\"CountSetterForm\">\n            <ul>\n              <li>\n                <label>Hours</label>\n                <input type=\"text\" id=\"HourSetter\" onChange={this.setCount(\"hours\")} />\n              </li>\n              <li>:</li>\n              <li>\n                <label>Minutes</label>\n                <input type=\"text\" id=\"MinuteSetter\" onChange={this.setCount(\"minutes\")} />\n              </li>\n              <li>:</li>\n              <li>\n                <label>Seconds</label>\n                <input type=\"text\" id=\"SecondSetter\" onChange={this.setCount(\"seconds\")} />\n              </li>\n            </ul>\n          </form>\n\n        <div className=\"LowerBox\">\n            <CountFormatter setDisplay={this.setDisplay} />\n            <Countdown setTime={this.state} />\n        </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport CountSetter from './CountSetter';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <div className=\"CounterParent\">\n        <CountSetter /> \n        {/* <Countdown /> */}\n       </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const root = document.getElementById(\"root\");\n    ReactDOM.render(<App />, root);\n});\n\n"],"sourceRoot":""}